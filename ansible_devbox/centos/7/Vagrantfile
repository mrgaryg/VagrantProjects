# Defines our Vagrant environment
#
# -*- mode: ruby -*-
# vi: set ft=ruby :

# use two digits id below, please
nodes = [
  { :hostname => 'mgmt', :ip => '10.0.15.10', :id => '10', :memory => 256 },
  { :hostname => 'zk',   :ip => '10.0.15.11', :id => '11', :memory => 256 },
]

Vagrant.configure("2") do |config|
  required_plugins = %w( vagrant-vbguest vagrant-disksize vagrant-hostmanager )
  _retry = false
  required_plugins.each do |plugin|
      unless Vagrant.has_plugin? plugin
          system "vagrant plugin install #{plugin}"
          _retry=true
      end
  end

  if (_retry)
      exec "vagrant " + ARGV.join(' ')
  end

  config.ssh.insert_key = false
  # Manage /etc/hosts on the guests
  config.hostmanager.enabled = true # Set /etc/hosts in the guests on 'vagrant up'
  # config.hostmanager.manage_host = true
  config.hostmanager.manage_guest = true
  config.hostmanager.ignore_private_ip = false
  config.hostmanager.include_offline = true

  # configure proxy settings if 'vagrant-proxyconf' plugin is intalled
  if Vagrant.has_plugin?("vagrant-proxyconf")
    config.proxy.http     = "http://192.168.0.2:3128/"
    config.proxy.https    = "http://192.168.0.2:3128/"
    config.proxy.no_proxy = "localhost,127.0.0.1,.example.com"
  end

  nodes.each do |node|
    config.vm.define node[:hostname], autostart: true do |node_config|
      nodename = node[:hostname]
      node_config.vm.box = "centos/7"
      node_config.vm.hostname = nodename
      node_config.vm.network :private_network, ip: node[:ip]
      node_config.vm.synced_folder ".", "/vagrant", type: "virtualbox", create: true
      node_config.vm.provider "virtualbox" do |vb|
        vb.memory = node[:memory]
      end
      # Set /etc/hosts in the guests on 'vagrant provision'
      node_config.vm.provision :hostmanager
      if nodename == "mgmt"
        node_config.vm.provision :shell, path: "bootstrap-mgmt.sh"
      end
    end
  end

  # create some brokers servers
  # https://docs.vagrantup.com/v2/vagrantfile/tips.html
  (1..2).each do |i|
    config.vm.define "broker#{i}", autostart: false do |node|
      node.vm.box = "centos/7"
      node.vm.hostname = "broker#{i}"
      node.vm.network :private_network, ip: "10.0.15.2#{i}"
      node.vm.network "forwarded_port", guest: 80, host: "808#{i}"
      node.vm.provider "virtualbox" do |vb|
        vb.memory = "256"
      end
      node.vm.provision :hostmanager
    end
  end

end
