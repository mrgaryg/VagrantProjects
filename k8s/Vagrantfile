domain   = 'kube'

# use two digits id below, please
nodes = [
  { :hostname => 'master',  :ip => '192.168.4.10', :id => '10' },
  { :hostname => 'worker1', :ip => '192.168.4.11', :id => '11' },
  { :hostname => 'worker2', :ip => '192.168.4.12', :id => '12' },
  { :hostname => 'worker3', :ip => '192.168.4.13', :id => '13' },
]

memory = 2000

Vagrant.configure("2") do |config|
  required_plugins = %w( vagrant-vbguest vagrant-disksize vagrant-hostmanager )
  _retry = false
  required_plugins.each do |plugin|
      unless Vagrant.has_plugin? plugin
          system "vagrant plugin install #{plugin}"
          _retry=true
      end
  end

  if (_retry)
      exec "vagrant " + ARGV.join(' ')
  end

  config.ssh.insert_key = false
  # Manage /etc/hosts on the guests
  config.hostmanager.enabled = true # Set /etc/hosts in the guests on 'vagrant up'
  # config.hostmanager.manage_host = true
  config.hostmanager.manage_guest = true
  config.hostmanager.ignore_private_ip = false
  config.hostmanager.include_offline = true
  nodes.each do |node|
    config.vm.define node[:hostname] do |nodeconfig|
      name = node[:hostname]
      nodeconfig.vm.box = "centos/7"
      nodeconfig.vm.hostname = name
      nodeconfig.vm.network :private_network, ip: node[:ip], virtualbox__intnet: domain
      nodeconfig.vm.provider :virtualbox do |vb|
        vb.name = name+"."+domain
        vb.memory = memory
        vb.cpus = 2
        # vb.customize ["modifyhd", :id, "--resize", "20000"]
        vb.customize ['modifyvm', :id, '--natdnshostresolver1', 'on']
        vb.customize ['modifyvm', :id, '--natdnsproxy1', 'on']
        vb.customize ['modifyvm', :id, '--macaddress1', "5CA1AB1E00"+node[:id]]
        vb.customize ['modifyvm', :id, '--natnet1', "192.168/16"]
      end
      # Set /etc/hosts in the guests on 'vagrant provision'
      nodeconfig.vm.provision :hostmanager
      nodeconfig.hostmanager.aliases = %W(#{name}.example.com)
      nodeconfig.vm.provision "file", source: "~/.vagrant.d/insecure_private_key", destination: "/home/vagrant/.ssh/id_rsa"
      # nodeconfig.vm.synced_folder "~/src/oreilly_courses/ckad_crash_course/cka", "/vagrant/src/cka"
      # nodeconfig.vm.provision "shell", inline: $script
      # nodeconfig.vm.provision "file", source: "setup-docker.sh", destination: "/vagrant/sd.sh"
      nodeconfig.vm.provision "shell", path: "setup-docker.sh"
      nodeconfig.vm.provision "shell", path: "setup-kubetools.sh"
      if name == "master"
         nodeconfig.vm.network  "forwarded_port", guest: 6443, host: 6443
      end
    end
  end
end
